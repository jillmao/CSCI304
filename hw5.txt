1. 
temp1 = 0x7fffffffd8d0 
temp2 = 0x601080
temp3 = 0x6014a0
temp4 = %ebp

buf1 = 0x7fffffffd8f8 
buf2 = 0x6010a0
buf3 = 0x6014c0

2.
		    ------------------
 0x7fffffffd8f8 -> |
                    ------------------
 0x7fffffffd8f4 -> |0x0
                    ------------------
 0x7fffffffd8f0 -> |0x0
                    ------------------
 0x7fffffffd8ec -> |
                    ------------------
 0x7fffffffe8e8 -> |0x21
                    ------------------
 0x7fffffffe8e4 -> |0x2c
                    ------------------
 0x7fffffffe8e0 -> |0x37
                    ------------------
 0x7fffffffe8dc -> |0x0
                    ------------------
 0x7fffffffe8d8 -> |0x4005ad
                    ------------------
 0x7fffffffe8d4 -> |0x7fff
                    ------------------
 0x7fffffffd8d0 -> |0xffffd8f0
                    ------------------
 0x7fffffffd8cc -> |0x7fff
                    ------------------
 0x7fffffffd8c8 -> |0xffffd8e0
                    ------------------

3.
    #define MAX_NAME_LEN 127
    
    typedef struct {
        char name[MAX_NAME_LEN + 1];
        unsigned long sid;
    } Student;
    
    /* return the name of student s */
    const char* getName (const Student* s) {
        return s->name;
    }
    
    /* set the name of student s
    If name is too long, cut off characters after the maximum number of characters allowed.
    */
    void setName(Student* s, const char* name) {
    #include <string.h>
    strncpy(s->name, name, MAX_NAME_LEN);

    }
    
    /* return the SID of student s */
    unsigned long getStudentID(const Student* s) {
        return s->sid;    



    }
    
    /* set the SID of student s */
    void setStudentID(Student* s, unsigned long sid) {
    #include <string.h>
    strcpy(s->sid, sid);


    }

4. Student s is a local variable inside the function and it's memory address cannot be returned.

5. M = 36 N = 24
